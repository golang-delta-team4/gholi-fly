syntax = "proto3";

package agency;

option go_package = "gholi-fly-agancy/api/pb/agency";

/*
  agency messages
*/

// Message for creating an agency
message CreateAgencyRequest {
  string name = 1;
  string owner_id = 2; // UUID of the owner
  string wallet_id = 3; // UUID of the wallet
  double profit_percentage = 4;
}

// Response for creating an agency
message CreateAgencyResponse {
  string id = 1; // UUID of the newly created agency
}

// Message for getting an agency by ID
message GetAgencyByIDRequest {
  string id = 1; // UUID of the agency
}

// Response for getting an agency by ID
message GetAgencyByIDResponse {
  string id = 1;
  string name = 2;
  string owner_id = 3;
  string wallet_id = 4;
  double profit_percentage = 5;
  string created_at = 6; // ISO8601 timestamp
  string updated_at = 7; // ISO8601 timestamp
}

// Message for updating an agency
message UpdateAgencyRequest {
  string id = 1; // UUID of the agency
  string name = 2;
  string owner_id = 3;
  string wallet_id = 4;
  double profit_percentage = 5;
}

// Response for successful update
message UpdateAgencyResponse {}

// Message for deleting an agency
message DeleteAgencyRequest {
  string id = 1; // UUID of the agency
}

// Response for successful deletion
message DeleteAgencyResponse {}

/*
  tour messages
*/

// Message for creating a tour
message CreateTourRequest {
  string name = 1;
  string description = 2;
  string start_date = 3; // ISO8601 timestamp
  string end_date = 4; // ISO8601 timestamp
  string source_location = 5;
  string destination_location = 6;
  string forward_trip_id = 7; // UUID of the trip
  string backward_trip_id = 8; // UUID of the trip
  uint64 ticket_count = 9;
  uint64 trip_agency_price = 10;
  string hotel_id = 11; // UUID of the hotel
  string check_in = 12; // ISO8601 timestamp
  string check_out = 13; // ISO8601 timestamp
  repeated string room_ids = 14;
  uint64 hotel_agency_price = 15;
  uint32 capacity = 16;
  bool is_published = 17;
}

// Response for creating a tour
message CreateTourResponse {
  string id = 1; // UUID of the newly created tour
}

// Message for getting a tour by ID
message GetTourByIDRequest {
  string id = 1; // UUID of the tour
}

// Response for getting a tour by ID
message GetTourByIDResponse {
  string id = 1;
  string name = 2;
  string description = 3;
  string start_date = 4; // ISO8601 timestamp
  string end_date = 5; // ISO8601 timestamp
  string source_location = 6;
  string destination_location = 7;
  string forward_trip_id = 8; // UUID of the trip
  string backward_trip_id = 9; // UUID of the trip
  uint64 trip_agency_price = 10;
  string hotel_id = 11; // UUID of the hotel
  uint64 hotel_agency_price = 12;
  uint32 capacity = 13;
  bool is_published = 14;
  string created_at = 15; // ISO8601 timestamp
  string updated_at = 16; // ISO8601 timestamp
}

// Message for updating a tour
message UpdateTourRequest {
  string id = 1; // UUID of the tour
  string name = 2;
  string description = 3;
  string start_date = 4; // ISO8601 timestamp
  string end_date = 5; // ISO8601 timestamp
  string source_location = 6;
  string destination_location = 7;
  string forward_trip_id = 8; // UUID of the trip
  string backward_trip_id = 9; // UUID of the trip
  uint64 ticket_count = 10;
  uint64 trip_agency_price = 11;
  string hotel_id = 12; // UUID of the hotel
  string check_in = 13; // ISO8601 timestamp
  string check_out = 14; // ISO8601 timestamp
  repeated string room_ids = 15;
  uint64 hotel_agency_price = 16;
  uint32 capacity = 17;
  bool is_published = 18;
}

// Response for successful update
message UpdateTourResponse {}

// Message for deleting a tour
message DeleteTourRequest {
  string id = 1; // UUID of the tour
}

// Response for successful deletion
message DeleteTourResponse {}

// Message for creating a reservation
message CreateReservationRequest {
  string tour_id = 1;        // UUID of the tour
  uint32 capacity = 2;       // Number of tickets/reservation slots
}

// Response for creating a reservation
message CreateReservationResponse {
  string reservation_id = 1; // UUID of the created reservation
}
