services:
  gholi-hotels-api:
    container_name: gholi-hotels-api
    build:
      context: ./micro-services/hotel/
      dockerfile: build/Dockerfile
    volumes:
      - ./micro-services/hotel/config.json:/etc/config.json:ro 
    depends_on:
      gholi-db:
        condition: service_healthy
      gholi-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  gholi-users-api:
    container_name: gholi-users-api
    build:
      context: ./micro-services/user/
      dockerfile: build/Dockerfile
    volumes:
      - ./micro-services/user/config.json:/etc/config.json:ro 
    depends_on:
      gholi-db:
        condition: service_healthy
      gholi-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  gholi-db:
    image: postgres:14.8
    container_name: gholi-db
    restart: always
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: ${PG_MULTIPLE_DATABASES}  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - gholi-db-volume:/var/lib/postgresql/data:rw
      - ./scripts/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh:ro

  gholi-redis:
      image: redis/redis-stack:7.2.0-v3
      container_name: gholi-redis
      volumes:
        - gholi-redis-volume:/data
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 5s
        timeout: 3s
        retries: 5
      restart: always

  gholi-nginx:
    image: nginx:1.25.2
    container_name: gholi-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx-config.conf:/etc/nginx/conf.d/default.conf:ro 
    depends_on:
      gholi-hotels-api:
        condition: service_healthy
      gholi-users-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/v1/hotel/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  gholi-db-volume:
  gholi-redis-volume:
